//initial landscape(modositatlan domborzat)= (.1/x)*(y/4)**2
initial landscape:{
			xx=(float)i/(float)m_size_x;
			yy=(float)j/(float)m_size_y;
			float k=(yy-.5)/4;
			m_map[i][j].height = (xx/4+20) / (xx+20) * (0.5+k*k);
}


CALCULATE (D)ELTAS BEFORE APLYING!

EG for m:{

    |y
->x v
+------x------+
|     m       |Dx
|  +----------+--+
y  |          |  |
|  |          |  |
|  |          |  |<= Dm_x = (v_x*Dt)/x * m -Dm_xy
+--+----------+--|
  D|          |##|<= Dm_xy = (v_x*Dt)/x * (v_y*Dt)/y * m
  y+-------------+
       ^
       Dm_y = (v_y*Dt)/y*m -Dm_xy
}
other values similar
Dt should be calculated so that numerical instability is avoided EG: (v_x*Dt)/x,(v_y*Dt)/y do not exceed 0.5 or so.

+--+    +--+    +-----+
|m1|  + |m2| -> |m1+m2|
+--+    +--+    +-----+
 v1      v2    m1v1+m2v2
               ---------
                 m1+m2

gravity
-------

problem:

+-+-+-+
|0|0|0|
+-+-+-+
|0|1|0|
+-+-+-+
|0|0|0| where does it go?
+-+-+-+


Possible sollution: use a gausian blur-like technique 
pros:
 -can be done in two 1d passes.
cons:
 - needs a convolution matrix.
 - just a simple gausian blur loses velocity data
 - -------------------------- does not seem to produce equal height in any
   reasonable number of iterations (probably because of loss of velocity data)

 sugested method:
  use gausian blur 3x3 convolution matrix (↓) to work out dispersal of water, but
then calculate velocities based on /*potential energy*/ pressures etc.
  
  matrix:
+----+---+----+
|1/16|1/8|1/16|
+----+---+----+
|1/8 |1/4|1/8 |
+----+---+----+
|1/16|1/8|1/16|
+----+---+----+

+-+
|#-> 
|#|+-+
|#||#|
|#||#| obviously enough, but what about ^?
|#||#|

p=ρ*g*Δh
a=(g*Δh)/x
where x= edge cell + fraction of center cell (look at matrix)

+----+
|    |
|   #|
|   #|
|    |
+----+

P = ρ*g*Δh
avg(P) = 1/2P
ρ = 1000Kg/m^3
F = avg(P)*1/2*l*Δh = 1/4*ρ*g*Δh^2l
m = ρ*1/2*l*Δh*1/4*l = 1/8*l^2*ρ*Δh
a = F/m = 2*(g*Δh)/l
s = 1/2*a/t^2 = (g*Δh)/(l*t^2)
D_m = m*s/(l/4) = 1/2*ρ*g*Δh^2
v = a*t = 2*g*Δh*t/l


FRICTION

frictional force := F <get rid of
viscosity := μ < #define or input
speed at top of surface := u <work out as function of vx,vy
karman constant := k <around 0.41 . assume to be .4
slope := S = sin(angle)


F=μ*l*l*u/h

m*a=μ*l*l*u/h
m= ρ*l*l*h
a=dv/t

dv=μ*u*t/(ρ*h^2)

u=sqrt(g*h*S/(Cd))

Cd = k^2/(ln(h/z0)-1)^2

//u=(u_/k)*ln(h/z0)


coefficient of drag,turbulent flow from

	ENVIRONMENTAL FLUID MECHANICS
	BENOIT CUSHMAN-ROISIN
	Thayer School of Engineering
	Dartmouth College
	Hanover, New Hampshire 03755

	(https://thayer.dartmouth.edu/~d30345d/books/EFM/)

		cd(x)=(k/(log(x/z0)-1))**2
		turb(h,v)=cd(h)*v**2/h
laminar flow and Reynolds number from engineering toolbox
	lam(h,v)=.001*2*v/(1000*(h**2))
	re(h,v)=10**6*v*h
assumption:
	laminar flow if re<2300, turbulent if re>4000
	otherwise transitional
	transitional region: assume linear interpolation


viscosity of water: 10^-3
